# Find the greatest product of five consecutive digits in the 1000-digit number.

def calculate(digit_string):
    # digits = list(digit_string)
    # digits = map(int, digits)
    digits = [int(x) for x in digit_string]

    sublists = []
    products = []

    begin = 0
    end = 5

    while end < len(digits):
        sublist = digits[begin:end]

        product = 1
        for digit in sublist:
            product *= digit

        products.append((product, sublist))

        begin += 1
        end += 1

    return max(products)

# q =\
# '73167176531330624919225119674426574742355349194934\
# ...
# 71636269561882670428252483600823257530420752963450';

q =  "73167176531330624919225119674426574742355349194934"
q += "96983520312774506326239578318016984801869478851843"
q += "85861560789112949495459501737958331952853208805511"
q += "12540698747158523863050715693290963295227443043557"
q += "66896648950445244523161731856403098711121722383113"
q += "62229893423380308135336276614282806444486645238749"
q += "30358907296290491560440772390713810515859307960866"
q += "70172427121883998797908792274921901699720888093776"
q += "65727333001053367881220235421809751254540594752243"
q += "52584907711670556013604839586446706324415722155397"
q += "53697817977846174064955149290862569321978468622482"
q += "83972241375657056057490261407972968652414535100474"
q += "82166370484403199890008895243450658541227588666881"
q += "16427171479924442928230863465674813919123162824586"
q += "17866458359124566529476545682848912883142607690042"
q += "24219022671055626321111109370544217506941658960408"
q += "07198403850962455444362981230987879927244284909188"
q += "84580156166097919133875499200524063689912560717606"
q += "05886116467109405077541002256983155200055935729725"
q += "71636269561882670428252483600823257530420752963450"

print(calculate(q))
